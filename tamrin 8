
import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, GRU, SimpleRNN, Dense, Flatten
from tensorflow.keras.utils import to_categorical

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

y_train = to_categorical(y_train, 10)
y_test = to_categorical(y_test, 10)

lstm_model = Sequential([
    LSTM(128, input_shape=(28, 28), activation='relu'),
    Dense(10, activation='softmax')
])

gru_model = Sequential([
    GRU(128, input_shape=(28, 28), activation='relu'),
    Dense(10, activation='softmax')
])

srnn_model = Sequential([
    SimpleRNN(128, input_shape=(28, 28), activation='relu'),
    Dense(10, activation='softmax')
])

lstm_model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
gru_model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
srnn_model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

lstm_model.fit(x_train, y_train, epochs=5, validation_data=(x_test, y_test))
gru_model.fit(x_train, y_train, epochs=5, validation_data=(x_test, y_test))
srnn_model.fit(x_train, y_train, epochs=5, validation_data=(x_test, y_test))
